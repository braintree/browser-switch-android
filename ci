#!/usr/bin/env bash

function sed_inplace () {
  # Ref: https://stackoverflow.com/a/4247319
  if [[ $OSTYPE == 'darwin'* ]]; then
    # macOS
    sed -i '' "$@"
  else
    sed -i'' "$@"
  fi
}

command_name="$1"

case $command_name in
  lint)
    ./gradlew clean lint
    ;;
  unit_tests)
    ./gradlew --continue clean testRelease
    ;;
  set_new_version)
    new_version="$2"

    # set release version in build.gradle
    sed_inplace -E "s/version = '[0-9]+\.[0-9]+\.[0-9]+(-[A-Z]+)?'/version = '${new_version}'/" build.gradle

    # set most recent version in README.md
    sed_inplace -E "s/:browser-switch:[0-9]+\.[0-9]+\.[0-9]+'/:browser-switch:${new_version}'/" README.md

    # set most recent version in v2_MIGRATION.md
    sed_inplace -E "s/:[0-9]+\.[0-9]+\.[0-9]+'/:${new_version}'/g" v2_MIGRATION.md

    # set most recent version in CHANGELOG.md
    sed_inplace -E "s/## unreleased/## ${new_version}/" CHANGELOG.md
    ;;
  increment_snapshot_version)
    new_version="$2"

    major=$(echo $new_version | cut -d '.' -f 1)
    minor=$(echo $new_version | cut -d '.' -f 2)
    patch=$(echo $new_version | cut -d '.' -f 3)

    incremented_patch=$((patch + 1))
    new_snapshot_version="${major}.${minor}.${incremented_patch}-SNAPSHOT"
    
    # set release version in build.gradle
    sed_inplace -E "s/version = '[0-9]+\.[0-9]+\.[0-9]+(-[A-Z]+)?'/version = '${new_snapshot_version}'/" build.gradle

    # update SNAPSHOT version in README.md
    sed_inplace -E "s/:browser-switch:[0-9]+\.[0-9]+\.[0-9]+-SNAPSHOT'/:browser-switch:${new_snapshot_version}'/" README.md
    ;;
  increment_demo_app_version_code)
    # extract version code from build.gradle; pipe into xargs command to trim whitespace
    current_version_code=$(grep -E 'versionCode = [0-9]+' build.gradle | cut -d '=' -f 2 | xargs)
    new_version_code=$(($current_version_code+1))

    # set updated version code in build.gradle
    sed_inplace -E "s/versionCode = [0-9]+/versionCode = ${new_version_code}/" build.gradle
    ;;
esac

