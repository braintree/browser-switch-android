plugins {
    id 'com.android.library'
}

android {
    compileSdkVersion rootProject.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    // robolectric
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

dependencies {
    implementation deps.annotation
    implementation deps.appcompat
    implementation deps.browser

    testImplementation deps.junit
    testImplementation deps.mockitoCore
    testImplementation deps.jsonassert
    testImplementation deps.robolectric
}

// region signing and publishing

task javadocs(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    failOnError false
}

task javadocsJar(type: Jar, dependsOn: javadocs) {
    archiveClassifier.set('javadoc')
    from javadocs.destinationDir
}

task sourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
}

project.ext.name = "browser-switch"
project.ext.pom_name = "browser-switch"
project.ext.pom_desc = "Android Browser Switch makes it easy to open a url in a browser or Chrome Custom Tab and receive a response as the result of user interaction, either cancel or response data from the web page."

apply from: rootProject.file("gradle/gradle-publish.gradle")

// endregion

