name: Release
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release'
        required: true
env:
  SIGNING_KEY_FILE_PATH: /home/runner/secretKey.gpg
jobs:
  build_aar:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Setup Java
        uses: .github/actions/setup_java
      - name: Decode Signing Key
        uses: .github/actions/decode_signing_key
        with:
          signing_key_file: ${{ secrets.SIGNING_KEY_FILE }}
          signing_file_path: ${{ env.SIGNING_KEY_FILE_PATH }}
      - name: Assemble
        run: ./gradlew --stacktrace assemble
        env:
          SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
          SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
          SIGNING_KEY_FILE: ${{ env.SIGNING_KEY_FILE_PATH }}

  # Run unit tests after a successful build
  unit_test_browser_switch:
    name: Unit Test Browser Switch
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Setup Java
        uses: .github/actions/setup_java
      - name: Run Unit Tests
        run: ./gradlew --stacktrace testRelease

  # Publish after successful build and unit tests
  publish_to_sonatype:
    needs: [ build_aar, unit_test_browser_switch ]
    name: Publish To Sonatype
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Setup Java
        uses: .github/actions/setup_java
      - name: Decode Signing Key
        uses: .github/actions/decode_signing_key
        with:
          signing_key_file: ${{ secrets.SIGNING_KEY_FILE }}
          signing_file_path: ${{ env.SIGNING_KEY_FILE_PATH }}
      - name: Update Versions
        uses: ./.github/actions/update_versions
        with:
          version: ${{ github.event.inputs.version }}
      - name: Publish Browser Switch
        uses: .github/actions/publish_to_sonatype
        with:
          sonatype_usr: ${{ secrets.SONATYPE_NEXUS_USERNAME }}
          sonatype_pwd: ${{ secrets.SONATYPE_NEXUS_PASSWORD }}
          signing_key_id: ${{ secrets.SIGNING_KEY_ID }}
          signing_key_pwd: ${{ secrets.SIGNING_KEY_PASSWORD }}
          signing_key_file: ${{ env.SIGNING_KEY_FILE_PATH }}
      - name: Close and Release Repository
        uses: ./.github/actions/close_and_release_repository
        with:
          sonatype_usr: ${{ secrets.SONATYPE_NEXUS_USERNAME }}
          sonatype_pwd: ${{ secrets.SONATYPE_NEXUS_PASSWORD }}
          signing_key_id: ${{ secrets.SIGNING_KEY_ID }}
          signing_key_pwd: ${{ secrets.SIGNING_KEY_PASSWORD }}
          signing_key_file: ${{ env.SIGNING_KEY_FILE_PATH }}

  release_finished:
    needs: [ publish_to_sonatype ]
    name: Release Finished
    runs-on: ubuntu-latest
    steps:
      - run: echo "Release finished"

  bump_version:
    needs: [ release_finished ]
    name: Bump Version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Set GitHub User
        uses: ./.github/actions/set_github_user
      - name: Update Version
        run: |
          ./gradlew -PversionParam=${{ github.event.inputs.version }} changeGradleReleaseVersion
          ./gradlew -PversionParam=${{ github.event.inputs.version }} changeREADMEVersion
          ./gradlew -PversionParam=${{ github.event.inputs.version }} changeMigrationGuideVersion
          ./gradlew -PversionParam=${{ github.event.inputs.version }} updateCHANGELOGVersion
          ./gradlew dokkaHtmlMultiModule
          git add -A
          git commit -am 'Release ${{ github.event.inputs.version }}'
          git tag ${{ github.event.inputs.version }} -a -m 'Release ${{ github.event.inputs.version }}'

          ./gradlew -PversionParam=${{ github.event.inputs.version }} incrementSNAPSHOTVersion
          ./gradlew incrementVersionCode
          git commit -am 'Prepare for development'
          git push origin master ${{ github.event.inputs.version }}

  create_github_release:
    needs: [ bump_version ]
    name: Create GitHub Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Save changelog entries to a file
        run: |
          sed -e '1,/##/d' -e '/##/,$d' CHANGELOG.md > changelog_entries.md
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.version }}
          release_name: ${{ github.event.inputs.version }}
          body_path: changelog_entries.md
          draft: false
          prerelease: false
